{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport axios from 'axios';\n\nconst icon = 'path/to/icon.png';\nconst formSearch = document.querySelector('.form');\nconst imageList = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nconst gallery = new SimpleLightbox('.gallery a', {\n    captionData: 'alt',\n    captionDelay: 250,\n});\n\nformSearch.addEventListener('submit', handleSearch);\n\nasync function handleSearch(event) {\n    event.preventDefault();\n    const searchQuery = event.currentTarget.elements.input.value;\n\n    imageList.innerHTML = '';\n    loader.classList.remove('is-hidden');\n\n    if (!searchQuery.trim()) {\n        showNotification({\n            title: '❕',\n            theme: 'light',\n            message: 'Please, fill in the search field',\n            messageSize: '20px',\n            messageColor: '#808080',\n            backgroundColor: '#e7fc44',\n            position: 'topLeft',\n            timeout: 3000,\n        });\n    return;\n    }\n\n    try {\n        const data = await fetchImages(searchQuery);\n\n        if (data.hits.length === 0) {\n            showNotification({\n                iconUrl: icon,\n                theme: 'dark',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n                messageSize: '16px',\n                messageColor: 'white',\n                backgroundColor: '#EF4040',\n                position: 'topRight',\n                timeout: 5000,\n            });\n        }\n        \n        imageList.innerHTML = createMarkup(data.hits);\n        gallery.refresh();\n    } catch (error) {\n        handleError(error);\n    } finally {\n        loader.classList.add('is-hidden');\n    }\n    event.currentTarget.reset();\n}\nasync function fetchImages(value) {\n    const BASE_URL = 'https://pixabay.com/api/';\n\n    const searchParams = {\n        key: '42027170-68cc294651d415255967a4fd3',\n        q: value,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n    };\n\n    try {\n        const response = await axios.get(BASE_URL, { params: searchParams });\n\n        if (response.status !== 200) {\n            throw new Error(response.status);\n        }\n\n        return response.data;\n    } catch (error) {\n        throw new Error(error.message || 'Error fetching images');\n    }\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n      `<li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n        </a>\n        <div class=\"container-additional-info\">\n          <div class=\"container-descr-inner\"><p class=\"description\">Likes</p><span class=\"description-value\">${likes}</span></div>\n          <div class=\"container-descr-inner\"><p class=\"description\">Views</p><span class=\"description-value\">${views}</span></div>\n          <div class=\"container-descr-inner\"><p class=\"description\">Comments</p><span class=\"description-value\">${comments}</span></div>\n          <div class=\"container-descr-inner\"><p class=\"description\">Downloads</p><span class=\"description-value\">${downloads}</span></div>\n        </div>\n      </li>`\n    )\n    .join('');\n}\n\nfunction showNotification(options) {\n  iziToast.show(options);\n}\n\nfunction handleError(err) {\n  console.error(err);\n  imageList.innerHTML = '';\n  showNotification({\n    iconUrl: icon,\n    theme: 'dark',\n    message: 'Sorry, there is a problem with connection with the server.',\n    messageSize: '16px',\n    messageColor: 'white',\n    backgroundColor: '#EF4040',\n    position: 'center',\n    timeout: 5000,\n  });\n}\n\n"],"names":["icon","formSearch","imageList","loader","gallery","SimpleLightbox","handleSearch","event","searchQuery","showNotification","data","fetchImages","createMarkup","error","handleError","value","BASE_URL","searchParams","response","axios","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","options","iziToast","err"],"mappings":"owBAMA,MAAMA,EAAO,mBACPC,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAS,SAAS,cAAc,SAAS,EAEzCC,EAAU,IAAIC,EAAe,aAAc,CAC7C,YAAa,MACb,aAAc,GAClB,CAAC,EAEDJ,EAAW,iBAAiB,SAAUK,CAAY,EAElD,eAAeA,EAAaC,EAAO,CAC/BA,EAAM,eAAc,EACpB,MAAMC,EAAcD,EAAM,cAAc,SAAS,MAAM,MAKvD,GAHAL,EAAU,UAAY,GACtBC,EAAO,UAAU,OAAO,WAAW,EAE/B,CAACK,EAAY,OAAQ,CACrBC,EAAiB,CACb,MAAO,IACP,MAAO,QACP,QAAS,mCACT,YAAa,OACb,aAAc,UACd,gBAAiB,UACjB,SAAU,UACV,QAAS,GACrB,CAAS,EACL,MACC,CAED,GAAI,CACA,MAAMC,EAAO,MAAMC,EAAYH,CAAW,EAEtCE,EAAK,KAAK,SAAW,GACrBD,EAAiB,CACb,QAAST,EACT,MAAO,OACP,QAAS,2EACT,YAAa,OACb,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,QAAS,GACzB,CAAa,EAGLE,EAAU,UAAYU,EAAaF,EAAK,IAAI,EAC5CN,EAAQ,QAAO,CAClB,OAAQS,EAAP,CACEC,EAAYD,CAAK,CACzB,QAAc,CACNV,EAAO,UAAU,IAAI,WAAW,CACnC,CACDI,EAAM,cAAc,OACxB,CACA,eAAeI,EAAYI,EAAO,CAC9B,MAAMC,EAAW,2BAEXC,EAAe,CACjB,IAAK,qCACL,EAAGF,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,EAEI,GAAI,CACA,MAAMG,EAAW,MAAMC,EAAM,IAAIH,EAAU,CAAE,OAAQC,CAAY,CAAE,EAEnE,GAAIC,EAAS,SAAW,IACpB,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGnC,OAAOA,EAAS,IACnB,OAAQL,EAAP,CACE,MAAM,IAAI,MAAMA,EAAM,SAAW,uBAAuB,CAC3D,CACL,CAEA,SAASD,EAAaQ,EAAK,CACzB,OAAOA,EACJ,IAAI,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAC5E;AAAA,wCACkCL;AAAA,4CACID,WAAsBE;AAAA;AAAA;AAAA,+GAG6CC;AAAA,+GACAC;AAAA,kHACGC;AAAA,mHACCC;AAAA;AAAA,YAG9G,EACA,KAAK,EAAE,CACZ,CAEA,SAASlB,EAAiBmB,EAAS,CACjCC,EAAS,KAAKD,CAAO,CACvB,CAEA,SAASd,EAAYgB,EAAK,CACxB,QAAQ,MAAMA,CAAG,EACjB5B,EAAU,UAAY,GACtBO,EAAiB,CACf,QAAST,EACT,MAAO,OACP,QAAS,6DACT,YAAa,OACb,aAAc,QACd,gBAAiB,UACjB,SAAU,SACV,QAAS,GACb,CAAG,CACH"}